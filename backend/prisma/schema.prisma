generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categories {
  category_id   Int        @id @default(autoincrement())
  category_name String     @unique @db.VarChar(100)
  description   String?
  is_active     Boolean?   @default(true)
  display_order Int?
  products      products[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model order_items {
  item_id          Int               @id @default(autoincrement())
  order_id         Int?
  variant_id       Int?
  imei_id          Int?
  quantity         Int
  unit_price       Decimal           @db.Decimal(12, 2)
  total_price      Decimal?          @default(dbgenerated("((quantity)::numeric * unit_price)")) @db.Decimal(15, 2)
  promotion_id     Int?
  discount_amount  Decimal?          @default(0) @db.Decimal(12, 2)
  promotions       promotions?       @relation(fields: [promotion_id], references: [promotion_id], onUpdate: NoAction, map: "fk_order_items_promotion_id")
  product_imeis    product_imeis?    @relation(fields: [imei_id], references: [imei_id], onUpdate: NoAction)
  orders           orders?           @relation(fields: [order_id], references: [order_id], onDelete: Cascade, onUpdate: NoAction)
  product_variants product_variants? @relation(fields: [variant_id], references: [variant_id], onUpdate: NoAction)

  @@index([imei_id], map: "idx_order_items_imei_id")
  @@index([order_id], map: "idx_order_items_order_id")
  @@index([promotion_id], map: "idx_order_items_promotion_id")
  @@index([variant_id], map: "idx_order_items_variant_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model orders {
  order_id         Int             @id @default(autoincrement())
  user_id          Int?
  order_date       DateTime?       @default(now()) @db.Timestamp(6)
  total_amount     Decimal         @db.Decimal(15, 2)
  discount_amount  Decimal?        @default(0) @db.Decimal(15, 2)
  final_amount     Decimal?        @default(dbgenerated("(total_amount - discount_amount)")) @db.Decimal(15, 2)
  status           String?         @default("pending") @db.VarChar(20)
  shipping_address String
  shipping_method  String?         @db.VarChar(50)
  shipping_fee     Decimal?        @default(0) @db.Decimal(12, 2)
  notes            String?
  created_at       DateTime?       @default(now()) @db.Timestamp(6)
  updated_at       DateTime?       @default(now()) @db.Timestamp(6)
  order_items      order_items[]
  users            users?          @relation(fields: [user_id], references: [user_id], onUpdate: NoAction)
  payments         payments[]
  product_imeis    product_imeis[]
  returns          returns[]
  warranties       warranties[]

  @@index([status], map: "idx_orders_status")
  @@index([user_id], map: "idx_orders_user_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model payments {
  payment_id     Int       @id @default(autoincrement())
  order_id       Int?
  payment_method String    @db.VarChar(50)
  payment_amount Decimal   @db.Decimal(15, 2)
  payment_status String?   @default("pending") @db.VarChar(20)
  transaction_id String?   @db.VarChar(100)
  payment_date   DateTime? @default(now()) @db.Timestamp(6)
  created_at     DateTime? @default(now()) @db.Timestamp(6)
  updated_at     DateTime? @default(now()) @db.Timestamp(6)
  orders         orders?   @relation(fields: [order_id], references: [order_id], onDelete: Cascade, onUpdate: NoAction)

  @@index([order_id], map: "idx_payments_order_id")
  @@index([payment_status], map: "idx_payments_payment_status")
}

model product_images {
  image_id         Int               @id @default(autoincrement())
  product_id       Int?
  variant_id       Int?
  image_url        String            @db.VarChar(255)
  is_primary       Boolean?          @default(false)
  display_order    Int?
  created_at       DateTime?         @default(now()) @db.Timestamp(6)
  products         products?         @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: NoAction)
  product_variants product_variants? @relation(fields: [variant_id], references: [variant_id], onDelete: Cascade, onUpdate: NoAction)

  @@index([product_id], map: "idx_product_images_product_id")
  @@index([variant_id], map: "idx_product_images_variant_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model product_imeis {
  imei_id           Int               @id @default(autoincrement())
  variant_id        Int?
  imei_number       String            @unique @db.VarChar(50)
  purchase_price    Decimal           @db.Decimal(12, 2)
  purchase_order_id Int?
  order_id          Int?
  status            String?           @default("pending") @db.VarChar(20)
  sold_at           DateTime?         @db.Timestamp(6)
  created_at        DateTime?         @default(now()) @db.Timestamp(6)
  order_items       order_items[]
  orders            orders?           @relation(fields: [order_id], references: [order_id], onUpdate: NoAction, map: "fk_product_imeis_order_id")
  purchase_orders   purchase_orders?  @relation(fields: [purchase_order_id], references: [order_id], onUpdate: NoAction)
  product_variants  product_variants? @relation(fields: [variant_id], references: [variant_id], onDelete: Cascade, onUpdate: NoAction)
  returns           returns[]
  warranties        warranties[]

  @@index([order_id], map: "idx_product_imeis_order_id")
  @@index([purchase_order_id], map: "idx_product_imeis_purchase_order_id")
  @@index([status], map: "idx_product_imeis_status")
  @@index([variant_id], map: "idx_product_imeis_variant_id")
}

model product_variants {
  variant_id           Int                    @id @default(autoincrement())
  product_id           Int?
  color                String                 @db.VarChar(50)
  storage_capacity     String                 @db.VarChar(50)
  ram                  String?                @db.VarChar(50)
  sku                  String                 @unique @db.VarChar(100)
  price                Decimal                @db.Decimal(12, 2)
  discount_price       Decimal?               @db.Decimal(12, 2)
  stock_quantity       Int?                   @default(0)
  is_active            Boolean?               @default(true)
  created_at           DateTime?              @default(now()) @db.Timestamp(6)
  updated_at           DateTime?              @default(now()) @db.Timestamp(6)
  order_items          order_items[]
  product_images       product_images[]
  product_imeis        product_imeis[]
  products             products?              @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: NoAction)
  promotion_products   promotion_products[]
  purchase_order_items purchase_order_items[]

  @@unique([product_id, color, storage_capacity, ram], map: "unique_variant_combination")
  @@index([is_active], map: "idx_product_variants_is_active")
  @@index([product_id], map: "idx_product_variants_product_id")
}

model products {
  product_id         Int                  @id @default(autoincrement())
  product_name       String               @db.VarChar(255)
  category_id        Int?
  brand              String               @db.VarChar(100)
  model              String               @db.VarChar(100)
  description        String?
  warranty_period    Int?
  base_price         Decimal?             @db.Decimal(12, 2)
  main_image_url     String?              @db.VarChar(255)
  is_active          Boolean?             @default(true)
  created_at         DateTime?            @default(now()) @db.Timestamp(6)
  updated_at         DateTime?            @default(now()) @db.Timestamp(6)
  product_images     product_images[]
  product_variants   product_variants[]
  categories         categories?          @relation(fields: [category_id], references: [category_id], onUpdate: NoAction)
  promotion_products promotion_products[]

  @@index([category_id], map: "idx_products_category_id")
  @@index([is_active], map: "idx_products_is_active")
}

model promotion_products {
  promotion_id     Int
  product_id       Int
  variant_id       Int
  created_at       DateTime?        @default(now()) @db.Timestamp(6)
  products         products         @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: NoAction)
  promotions       promotions       @relation(fields: [promotion_id], references: [promotion_id], onDelete: Cascade, onUpdate: NoAction)
  product_variants product_variants @relation(fields: [variant_id], references: [variant_id], onDelete: Cascade, onUpdate: NoAction)

  @@id([promotion_id, product_id, variant_id])
  @@index([product_id], map: "idx_promotion_products_product_id")
  @@index([promotion_id], map: "idx_promotion_products_promotion_id")
  @@index([variant_id], map: "idx_promotion_products_variant_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model promotions {
  promotion_id       Int                  @id @default(autoincrement())
  promotion_name     String               @db.VarChar(255)
  description        String?
  discount_type      String               @db.VarChar(20)
  discount_value     Decimal              @db.Decimal(12, 2)
  start_date         DateTime             @db.Timestamp(6)
  end_date           DateTime             @db.Timestamp(6)
  is_active          Boolean?             @default(true)
  created_at         DateTime?            @default(now()) @db.Timestamp(6)
  updated_at         DateTime?            @default(now()) @db.Timestamp(6)
  order_items        order_items[]
  promotion_products promotion_products[]

  @@index([start_date, end_date], map: "idx_promotions_dates")
  @@index([is_active], map: "idx_promotions_is_active")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model purchase_order_items {
  item_id          Int               @id @default(autoincrement())
  order_id         Int?
  variant_id       Int?
  quantity         Int
  unit_price       Decimal           @db.Decimal(12, 2)
  total_price      Decimal?          @default(dbgenerated("((quantity)::numeric * unit_price)")) @db.Decimal(15, 2)
  purchase_orders  purchase_orders?  @relation(fields: [order_id], references: [order_id], onDelete: Cascade, onUpdate: NoAction)
  product_variants product_variants? @relation(fields: [variant_id], references: [variant_id], onUpdate: NoAction)

  @@index([order_id], map: "idx_purchase_order_items_order_id")
  @@index([variant_id], map: "idx_purchase_order_items_variant_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model purchase_orders {
  order_id             Int                    @id @default(autoincrement())
  supplier_id          Int?
  order_date           DateTime?              @default(now()) @db.Timestamp(6)
  total_amount         Decimal?               @db.Decimal(15, 2)
  status               String?                @default("pending") @db.VarChar(20)
  created_by           Int?
  received_at          DateTime?              @db.Timestamp(6)
  product_imeis        product_imeis[]
  purchase_order_items purchase_order_items[]
  users                users?                 @relation(fields: [created_by], references: [user_id], onUpdate: NoAction)
  suppliers            suppliers?             @relation(fields: [supplier_id], references: [supplier_id], onUpdate: NoAction)

  @@index([status], map: "idx_purchase_orders_status")
  @@index([supplier_id], map: "idx_purchase_orders_supplier_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model returns {
  return_id                       Int            @id @default(autoincrement())
  order_id                        Int?
  user_id                         Int?
  return_date                     DateTime?      @default(now()) @db.Timestamp(6)
  reason                          String
  status                          String?        @default("pending") @db.VarChar(20)
  return_type                     String?        @db.VarChar(20)
  refund_amount                   Decimal?       @db.Decimal(12, 2)
  new_imei_id                     Int?
  handled_by                      Int?
  resolved_at                     DateTime?      @db.Timestamp(6)
  created_at                      DateTime?      @default(now()) @db.Timestamp(6)
  updated_at                      DateTime?      @default(now()) @db.Timestamp(6)
  users_returns_handled_byTousers users?         @relation("returns_handled_byTousers", fields: [handled_by], references: [user_id], onUpdate: NoAction)
  product_imeis                   product_imeis? @relation(fields: [new_imei_id], references: [imei_id], onUpdate: NoAction)
  orders                          orders?        @relation(fields: [order_id], references: [order_id], onDelete: Cascade, onUpdate: NoAction)
  users_returns_user_idTousers    users?         @relation("returns_user_idTousers", fields: [user_id], references: [user_id], onUpdate: NoAction)

  @@index([order_id], map: "idx_returns_order_id")
  @@index([status], map: "idx_returns_status")
  @@index([user_id], map: "idx_returns_user_id")
}

model roles {
  role_id     Int          @id @default(autoincrement())
  role_name   String       @unique @db.VarChar(50)
  description String?
  user_roles  user_roles[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model suppliers {
  supplier_id     Int               @id @default(autoincrement())
  supplier_name   String            @db.VarChar(100)
  contact_person  String?           @db.VarChar(100)
  phone_number    String            @db.VarChar(15)
  email           String?           @db.VarChar(100)
  address         String
  status          String?           @default("active") @db.VarChar(20)
  created_at      DateTime?         @default(now()) @db.Timestamp(6)
  updated_at      DateTime?         @default(now()) @db.Timestamp(6)
  notes           String?
  purchase_orders purchase_orders[]

  @@index([status], map: "idx_suppliers_status")
}

model user_roles {
  user_id       Int
  role_id       Int
  assigned_date DateTime? @default(now()) @db.Timestamp(6)
  roles         roles     @relation(fields: [role_id], references: [role_id], onDelete: Cascade, onUpdate: NoAction)
  users         users     @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, role_id])
  @@index([role_id], map: "idx_user_roles_role_id")
  @@index([user_id], map: "idx_user_roles_user_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model users {
  user_id                                               Int                 @id @default(autoincrement())
  email                                                 String              @unique @db.VarChar(100)
  password                                              String              @db.VarChar(255)
  full_name                                             String              @db.VarChar(100)
  phone_number                                          String?             @db.VarChar(15)
  address                                               String?
  default_payment_method                                String?             @db.VarChar(50)
  created_at                                            DateTime?           @default(now()) @db.Timestamp(6)
  updated_at                                            DateTime?           @default(now()) @db.Timestamp(6)
  status                                                String?             @default("active") @db.VarChar(20)
  orders                                                orders[]
  purchase_orders                                       purchase_orders[]
  returns_returns_handled_byTousers                     returns[]           @relation("returns_handled_byTousers")
  returns_returns_user_idTousers                        returns[]           @relation("returns_user_idTousers")
  user_roles                                            user_roles[]
  warranty_requests_warranty_requests_handled_byTousers warranty_requests[] @relation("warranty_requests_handled_byTousers")
  warranty_requests_warranty_requests_user_idTousers    warranty_requests[] @relation("warranty_requests_user_idTousers")

  @@index([email], map: "idx_users_email")
  @@index([status], map: "idx_users_status")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model warranties {
  warranty_id         Int                 @id @default(autoincrement())
  imei_id             Int?
  order_id            Int?
  warranty_start_date DateTime            @db.Timestamp(6)
  warranty_end_date   DateTime            @db.Timestamp(6)
  warranty_period     Int
  status              String?             @default("active") @db.VarChar(20)
  created_at          DateTime?           @default(now()) @db.Timestamp(6)
  updated_at          DateTime?           @default(now()) @db.Timestamp(6)
  product_imeis       product_imeis?      @relation(fields: [imei_id], references: [imei_id], onDelete: Cascade, onUpdate: NoAction)
  orders              orders?             @relation(fields: [order_id], references: [order_id], onUpdate: NoAction)
  warranty_requests   warranty_requests[]

  @@index([imei_id], map: "idx_warranties_imei_id")
  @@index([order_id], map: "idx_warranties_order_id")
  @@index([status], map: "idx_warranties_status")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model warranty_requests {
  request_id                                Int         @id @default(autoincrement())
  warranty_id                               Int?
  user_id                                   Int?
  request_date                              DateTime?   @default(now()) @db.Timestamp(6)
  issue_description                         String
  status                                    String?     @default("pending") @db.VarChar(20)
  resolution_details                        String?
  resolved_at                               DateTime?   @db.Timestamp(6)
  handled_by                                Int?
  created_at                                DateTime?   @default(now()) @db.Timestamp(6)
  updated_at                                DateTime?   @default(now()) @db.Timestamp(6)
  users_warranty_requests_handled_byTousers users?      @relation("warranty_requests_handled_byTousers", fields: [handled_by], references: [user_id], onUpdate: NoAction)
  users_warranty_requests_user_idTousers    users?      @relation("warranty_requests_user_idTousers", fields: [user_id], references: [user_id], onUpdate: NoAction)
  warranties                                warranties? @relation(fields: [warranty_id], references: [warranty_id], onDelete: Cascade, onUpdate: NoAction)

  @@index([status], map: "idx_warranty_requests_status")
  @@index([user_id], map: "idx_warranty_requests_user_id")
  @@index([warranty_id], map: "idx_warranty_requests_warranty_id")
}
